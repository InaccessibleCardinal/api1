<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="28" failures="0" errors="0" time="9.182">
  <testsuite name="authenticationMiddlware function" errors="0" failures="0" skipped="0" timestamp="2021-08-01T23:12:21" time="6.028" tests="2">
    <testcase classname="authenticationMiddlware function should respond with a 400 error" name="authenticationMiddlware function should respond with a 400 error" time="0.003">
    </testcase>
    <testcase classname="authenticationMiddlware function should just call next" name="authenticationMiddlware function should just call next" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="corsMiddlware function" errors="0" failures="0" skipped="0" timestamp="2021-08-01T23:12:21" time="6.044" tests="1">
    <testcase classname="corsMiddlware function should set headers and call next" name="corsMiddlware function should set headers and call next" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="loggerMiddlware function" errors="0" failures="0" skipped="0" timestamp="2021-08-01T23:12:21" time="6.15" tests="1">
    <testcase classname="loggerMiddlware function should log url and method" name="loggerMiddlware function should log url and method" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="getUsersFromDB function" errors="0" failures="0" skipped="0" timestamp="2021-08-01T23:12:21" time="6.147" tests="2">
    <testcase classname="getUsersFromDB function should read users from the db and return users" name="getUsersFromDB function should read users from the db and return users" time="0.005">
    </testcase>
    <testcase classname="getUsersFromDB function should return an err result" name="getUsersFromDB function should return an err result" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="makeHttpRequest function" errors="0" failures="0" skipped="0" timestamp="2021-08-01T23:12:21" time="6.337" tests="13">
    <testcase classname="makeHttpRequest function should perform a GET request" name="makeHttpRequest function should perform a GET request" time="0.02">
    </testcase>
    <testcase classname="makeHttpRequest function should be a resolved promise" name="makeHttpRequest function should be a resolved promise" time="0.004">
    </testcase>
    <testcase classname="makeHttpRequest function should perform a GET request and handle Bad Status" name="makeHttpRequest function should perform a GET request and handle Bad Status" time="0.003">
    </testcase>
    <testcase classname="makeHttpRequest function should handle Bad Config" name="makeHttpRequest function should handle Bad Config" time="0">
    </testcase>
    <testcase classname="makeHttpRequest function should perform a POST request" name="makeHttpRequest function should perform a POST request" time="0.003">
    </testcase>
    <testcase classname="makeHttpRequest function should perform a GET request, returning a string" name="makeHttpRequest function should perform a GET request, returning a string" time="0.002">
    </testcase>
    <testcase classname="makeHttpRequest function should perform a GET request and handle Bad Server" name="makeHttpRequest function should perform a GET request and handle Bad Server" time="0.002">
    </testcase>
    <testcase classname="makeHttpRequest function should reject a promise" name="makeHttpRequest function should reject a promise" time="0.001">
    </testcase>
    <testcase classname="makeHttpError function should handle no-errors, edge case" name="makeHttpError function should handle no-errors, edge case" time="0">
    </testcase>
    <testcase classname="checkIsBadStatus function should return true" name="checkIsBadStatus function should return true" time="0.001">
    </testcase>
    <testcase classname="checkIsBadStatus function should return false" name="checkIsBadStatus function should return false" time="0">
    </testcase>
    <testcase classname="checkIsConfigValid function should return true" name="checkIsConfigValid function should return true" time="0">
    </testcase>
    <testcase classname="checkIsConfigValid function should return false" name="checkIsConfigValid function should return false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="handleHome function" errors="0" failures="0" skipped="0" timestamp="2021-08-01T23:12:21" time="6.348" tests="1">
    <testcase classname="handleHome function should return hello world" name="handleHome function should return hello world" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="handleUsers function" errors="0" failures="0" skipped="0" timestamp="2021-08-01T23:12:21" time="6.352" tests="2">
    <testcase classname="handleUsers function should respond with users" name="handleUsers function should respond with users" time="0.005">
    </testcase>
    <testcase classname="handleUsers function should respond with a 500" name="handleUsers function should respond with a 500" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="handleTeam function" errors="0" failures="0" skipped="0" timestamp="2021-08-01T23:12:21" time="6.373" tests="2">
    <testcase classname="handleTeam function should return a team with players" name="handleTeam function should return a team with players" time="0.005">
    </testcase>
    <testcase classname="handleTeam function should handle an error" name="handleTeam function should handle an error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getTeam function" errors="0" failures="0" skipped="0" timestamp="2021-08-01T23:12:21" time="6.457" tests="4">
    <testcase classname="getTeam function should return team and players" name="getTeam function should return team and players" time="0.005">
    </testcase>
    <testcase classname="getTeam function should handle an error if team is empty" name="getTeam function should handle an error if team is empty" time="0.001">
    </testcase>
    <testcase classname="getTeam function should handle an error if players are empty" name="getTeam function should handle an error if players are empty" time="0.001">
    </testcase>
    <testcase classname="getTeam function should handle a service call error" name="getTeam function should handle a service call error" time="0">
    </testcase>
  </testsuite>
</testsuites>